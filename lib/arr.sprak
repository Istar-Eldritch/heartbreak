array arr_tail(array input)
    array acc = []
    number endd = Count(input) - 1
    if endd == 0
        return acc
    end
    loop i from 1 to endd
        Append(acc, input[i])
    end
    return acc
end

array arr_sub(array input, number f, number t)
    array acc = []
    loop i from f to t
        Append(acc, input[t])
    end
    return acc
end

# Returns the position of the value or -1
# TODO Make this a binary search algorithm
number arr_find(array input, string value)
    var i = 0
    loop input
        if value == @
            return i
        end
        i++ 
    end
    return -1
end

# Returns the concatenation of the values of the array using the separator
string arr_concat(array input, string separator)
    var str = ""
    var index = 0
    loop
        if index >= Count(input)
            break
        else if index > 0
            str = str + separator
        end
        str = str + input[index]
        index++
    end
    return str
end

# Does a insert_on_site
void arr_insert(array arr, number pos, value)
    var len = Count(arr)
    if len <= pos
        Append(arr,value)
    else
        loop
            if pos >= len
                break;
            else
                var subs = value;
                value = arr[pos]
                arr[pos] = subs
            end
        end
    end
end

# In place bubble sort
void arr_bubble_sort(array xs)
    if Count(xs) < 2
        return
    end
    loop
        bool didFlip = false
        loop i from 0 to Count(xs) - 2
            var c = cmp(xs[i],xs[i + 1])
            if c[0] != 0
                Print("Cant sort because values are not sortable: " + c[1])
                return;
            end
            if c[1] == 1
                var temp = xs[i]
                xs[i] = xs[i + 1]
                xs[i + 1] = temp
                didFlip = true
            end
        end
        if didFlip == false
            break
        end
    end
end

array arr_fix(array broken)
    var arr = []
    loop broken
        Append(arr, @)
    end
    return arr
end